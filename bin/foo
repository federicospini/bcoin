#!/usr/bin/env node

'use strict';

process.title = 'bcoin';

var assert = require('assert');
var bcoin = require('../');
var co = bcoin.co;
var options, node;

options = bcoin.config({
  config: true,
  arg: true,
  env: true,
  logLevel: 'info',
  logFile: false,
  db: 'leveldb',
  listen: true
});

var rootDir = './data'
var fs = require('fs')
var n = process.argv[2];
var unparsedChain = JSON.parse(fs.readFileSync(`${rootDir}/data-${n}.json`))
var keys = Object.keys(unparsedChain)
var hashes = keys.map(k => Buffer.from(k, 'hex'))
var chain = keys.map(k => Buffer.from(unparsedChain[k] , 'hex')) 
var map = {}

keys.forEach((h, i) => map[h] = chain[i])

bcoin.set(options);

node = new bcoin.foonode({options, chain, hashes, map});

node.on('error', function(err) {
  ;
});

process.on('uncaughtException', function(err) {
  node.logger.debug(err.stack);
  node.logger.error(err);
  process.exit(1);
});

co.spawn(function *() {
  yield node.open();
  yield node.connect();
  // node.startSync();
}).catch(function(err) {
  throw err;
});

